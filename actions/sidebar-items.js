initSidebarItems({"constant":[["RCL_RET_ACTION_CLIENT_INVALID",""],["RCL_RET_ACTION_CLIENT_TAKE_FAILED",""],["RCL_RET_ACTION_GOAL_ACCEPTED",""],["RCL_RET_ACTION_GOAL_EVENT_INVALID",""],["RCL_RET_ACTION_GOAL_HANDLE_INVALID",""],["RCL_RET_ACTION_GOAL_REJECTED",""],["RCL_RET_ACTION_NAME_INVALID",""],["RCL_RET_ACTION_SERVER_INVALID",""],["RCL_RET_ACTION_SERVER_TAKE_FAILED",""]],"enum":[["rcl_action_goal_event_t","Goal state transition events"]],"fn":[["rcl_action_accept_new_goal","Accept a new goal using an action server. **"],["rcl_action_cancel_response_fini","Finalize a rcl_action_cancel_response_t. **"],["rcl_action_cancel_response_init","Initialize a rcl_action_cancel_response_t. **"],["rcl_action_client_fini","Finalize a rcl_action_client_t. **"],["rcl_action_client_get_action_name","Get the name of the action for a rcl_action_client_t. **"],["rcl_action_client_get_default_options","Return the default action client options in a rcl_action_client_options_t. **"],["rcl_action_client_get_options","Return the options for a rcl_action_client_t. **"],["rcl_action_client_init","Initialize a rcl_action_client_t. **"],["rcl_action_client_is_valid","Check that a rcl_action_client_t is valid. **"],["rcl_action_client_wait_set_get_entities_ready","Get the wait set entities that are ready for a rcl_action_client_t. **"],["rcl_action_client_wait_set_get_num_entities","Get the number of wait set entities associated with a rcl_action_client_t. **"],["rcl_action_expire_goals","Expires goals associated with an action server. **"],["rcl_action_get_client_names_and_types_by_node","Get a list of action names and types for action clients associated with a node. **"],["rcl_action_get_goal_status_array","Get a status array message for accepted goals associated with an action server. **"],["rcl_action_get_names_and_types","Return a list of action names and their types. **"],["rcl_action_get_server_names_and_types_by_node","Get a list of action names and types for action servers associated with a node. **"],["rcl_action_get_zero_initialized_cancel_request","Return a rcl_action_cancel_request_t with members set to `NULL`. **"],["rcl_action_get_zero_initialized_cancel_response","Return a rcl_action_cancel_response_t with members set to `NULL`. **"],["rcl_action_get_zero_initialized_client","Return a rcl_action_client_t struct with members set to `NULL`. **"],["rcl_action_get_zero_initialized_goal_handle","Return a rcl_action_goal_handle_t struct with members set to `NULL`. **"],["rcl_action_get_zero_initialized_goal_info","Return a rcl_action_goal_info_t with members set to zero values."],["rcl_action_get_zero_initialized_goal_status_array","Return a rcl_action_goal_status_array_t with members set to `NULL`. **"],["rcl_action_get_zero_initialized_server","Return a rcl_action_server_t struct with members set to `NULL`. **"],["rcl_action_goal_handle_fini","Finalize a rcl_action_goal_handle_t. **"],["rcl_action_goal_handle_get_info","Get the ID of a goal using a rcl_action_goal_handle_t. **"],["rcl_action_goal_handle_get_status","Get the status of a goal. **"],["rcl_action_goal_handle_init","Initialize a rcl_action_goal_handle_t. **"],["rcl_action_goal_handle_is_active","Check if a goal is active using a rcl_action_goal_handle_t. **"],["rcl_action_goal_handle_is_cancelable","Check if a goal can be transitioned to CANCELING in its current state. **"],["rcl_action_goal_handle_is_valid","Check if a rcl_action_goal_handle_t is valid. **"],["rcl_action_goal_status_array_fini","Finalize a rcl_action_goal_status_array_t. **"],["rcl_action_goal_status_array_init","Initialize a rcl_action_goal_status_array_t. **"],["rcl_action_notify_goal_done","Notifies action server that a goal handle reached a terminal state. **"],["rcl_action_process_cancel_request","Process a cancel request using an action server. **"],["rcl_action_publish_feedback","Publish a ROS feedback message for an active goal using an action server. **"],["rcl_action_publish_status","Publish a status array message for accepted goals associated with an action server. **"],["rcl_action_send_cancel_request","Send a cancel request for a goal using a rcl_action_client_t. **"],["rcl_action_send_cancel_response","Send a cancel response using an action server. **"],["rcl_action_send_goal_request","Send a ROS goal using a rcl_action_client_t. **"],["rcl_action_send_goal_response","Send a response for a goal request to an action client using an action server. **"],["rcl_action_send_result_request","Send a request for the result of a completed goal associated with a rcl_action_client_t. **"],["rcl_action_send_result_response","Send a result response using an action server. **"],["rcl_action_server_fini","Finalize an action server. **"],["rcl_action_server_get_action_name","Get the action name for an action server. **"],["rcl_action_server_get_default_options","Return the default action server options in a rcl_action_server_options_t. **"],["rcl_action_server_get_goal_handles","Get the goal handles for all goals an action server is tracking. **"],["rcl_action_server_get_options","Return the rcl_action_server_options_t for an action server. **"],["rcl_action_server_goal_exists","Check if a goal is already being tracked by an action server. **"],["rcl_action_server_init","Initialize an action server. **"],["rcl_action_server_is_available","Check if an action server is available for the given action client. **"],["rcl_action_server_is_valid","Check if an action server is valid. **"],["rcl_action_server_is_valid_except_context","Check if an action server is valid without erroring if the library is shutting down. **"],["rcl_action_server_wait_set_get_entities_ready","Get the wait set entities that are ready for a rcl_action_server_t. **"],["rcl_action_server_wait_set_get_num_entities","Get the number of wait set entities associated with a rcl_action_server_t. **"],["rcl_action_take_cancel_request","Take a pending cancel request using an action server. **"],["rcl_action_take_cancel_response","Take a cancel response using a rcl_action_client_t. **"],["rcl_action_take_feedback","Take a ROS feedback message for an active goal associated with a rcl_action_client_t. **"],["rcl_action_take_goal_request","Take a pending ROS goal using an action server. **"],["rcl_action_take_goal_response","Take a response for a goal request from an action server using a rcl_action_client_t. **"],["rcl_action_take_result_request","Take a pending result request using an action server. **"],["rcl_action_take_result_response","Take a ROS result message for a completed goal associated with a rcl_action_client_t. **"],["rcl_action_take_status","Take a ROS status message using a rcl_action_client_t. **"],["rcl_action_transition_goal_state","Transition a goal from one state to the next. **"],["rcl_action_update_goal_state","Update a goal state with a rcl_action_goal_handle_t and an event. **"],["rcl_action_wait_set_add_action_client","Add a rcl_action_client_t to a wait set. **"],["rcl_action_wait_set_add_action_server","Add a rcl_action_server_t to a wait set. **"]],"struct":[["rcl_action_cancel_response_t","Struct with the action cancel response"],["rcl_action_client_options_t","Options available for a rcl_action_client_t."],["rcl_action_client_t","Structure which encapsulates a ROS action client."],["rcl_action_goal_handle_t","Goal handle for an action."],["rcl_action_goal_status_array_t","Struct with the action goal status array"],["rcl_action_server_options_t","Options available for a rcl_action_server_t."],["rcl_action_server_t","Structure which encapsulates a ROS Action Server."]],"type":[["rcl_action_cancel_request_t",""],["rcl_action_goal_info_t",""],["rcl_action_goal_state_t","Goal states"]]});